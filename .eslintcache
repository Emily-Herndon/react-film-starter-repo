[{"/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/index.js":"1","/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/registerServiceWorker.js":"2","/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/App.js":"3","/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/components/FilmList.js":"4","/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/components/Details.js":"5","/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/TMDB.js":"6","/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/components/FilmRow.js":"7","/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/components/Poster.js":"8","/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/components/Fave.js":"9"},{"size":280,"mtime":1654814530119,"results":"10","hashOfConfig":"11"},{"size":4022,"mtime":1654801018943,"results":"12","hashOfConfig":"11"},{"size":1424,"mtime":1655252421049,"results":"13","hashOfConfig":"11"},{"size":3705,"mtime":1655231816981,"results":"14","hashOfConfig":"11"},{"size":1520,"mtime":1655173213006,"results":"15","hashOfConfig":"11"},{"size":4039,"mtime":1655250976902,"results":"16","hashOfConfig":"11"},{"size":1569,"mtime":1655172743760,"results":"17","hashOfConfig":"11"},{"size":331,"mtime":1655164505681,"results":"18","hashOfConfig":"11"},{"size":1230,"mtime":1655231847260,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"bfezu2",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/index.js",[],["40","41"],"/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/registerServiceWorker.js",[],"/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/App.js",["42"],"/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/components/FilmList.js",["43","44"],"import { useState } from 'react'\nimport FilmRow from './FilmRow'\n\nexport default function FilmList(props){\n    const [filter, setFilter] = useState('all')\n    const [faves, setFaves] = useState([])\n    const [isFave, setIsFave] = useState(false)\n\n    const handleFaveToggle = (film) => {\n        console.log('toggling fave')\n        let newFaves = [...faves]\n        const filmIndex = newFaves.indexOf(film)\n        if (filmIndex === -1){\n            console.log(`${film.title} added to favorites`)\n            newFaves = [...newFaves, film]\n        }else {\n            console.log(`${film.title} removed from favorites`)\n            newFaves.splice(filmIndex, 1)\n        }\n        setFaves(newFaves)\n    }\n    \n    const handleFilterClick = (filter) => {\n        // e.preventDefault()\n        setFilter(filter)\n    }\n    const filmsToDisplay = filter === 'all' ? props.films : faves\n    const allFilms = filmsToDisplay.map((film, i) => {\n        return(\n            <div className='film-row'>\n                <FilmRow \n                key={`filmRow-${i}`} \n                film={film} \n                onFaveToggle={handleFaveToggle}\n                isFave={faves.includes(film)}\n                handleDetailsClick={props.handleDetailsClick}\n                />\n            </div>\n        )\n    })\n    return(\n        <div className=\"film-list\">\n            <h1 className=\"section-title\">FILMS</h1>\n            <div className=\"film-list-filters\">\n                <div \n                className={`film-list-filter \n                ${filter === 'all' ? 'is-active' : ''}`}\n                onClick={()=>handleFilterClick('all')}\n                >\n                    ALL\n                    <span className=\"section-count\">{props.films.length}</span>\n                </div>\n                <div \n                className={`film-list-filter ${filter === 'faves' ? 'is-active' : ''}`}\n                onClick={()=>handleFilterClick('faves')}\n                >\n                    FAVES\n                    <span className=\"section-count\">{faves.length}</span>\n                </div>\n            </div>\n            {allFilms}\n        </div>\n       \n    )\n}\n\n\n// export default class FilmList extends Component {\n//     handleFilterClick = (filter) => {\n//         // e.preventDefault()\n//         this.setState({filter})\n//     }\n\n//     state = {\n//         filter: \"all\"\n//     }\n\n//     render(){\n//         const allFilms = this.props.films.map((film, i) => {\n//             return(\n//                 <div className='film-row'>\n//                     <FilmRow key={`film-${i}`} film={film}/>\n//                 </div>\n//             )\n//         })\n//         return(\n//             <div className=\"film-list\">\n//                 <h1 className=\"section-title\">FILMS</h1>\n//                 <div className=\"film-list-filters\">\n//                     <div \n//                     className={`film-list-filter \n//                     ${this.state.filter === 'all' ? 'is-active' : ''}`}\n//                     onClick={()=>this.handleFilterClick('all')}\n//                     >\n//                         ALL\n//                         <span className=\"section-count\">{this.props.films.length}</span>\n//                     </div>\n//                     <div \n//                     className={`film-list-filter ${this.state.filter === 'faves' ? 'is-active' : ''}`}\n//                     onClick={()=>this.handleFilterClick('faves')}\n//                     >\n//                         FAVES\n//                         <span className=\"section-count\">0</span>\n//                     </div>\n//                 </div>\n//                 {allFilms}\n//             </div>\n           \n//         )\n//     }\n// }","/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/components/Details.js",[],"/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/TMDB.js",[],"/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/components/FilmRow.js",[],"/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/components/Poster.js",[],"/Users/emilyherndon/Documents/GA-Bootcamp/Unit_3/In-class-notes-practice/react-film-starter-repo/src/components/Fave.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":25,"column":6,"nodeType":"51","endLine":25,"endColumn":8,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":7,"column":12,"nodeType":"55","messageId":"56","endLine":7,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":7,"column":20,"nodeType":"55","messageId":"56","endLine":7,"endColumn":29},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'popularFilmsUrl'. Either include it or remove the dependency array.","ArrayExpression",["60"],"no-unused-vars","'isFave' is assigned a value but never used.","Identifier","unusedVar","'setIsFave' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [popularFilmsUrl]",{"range":"63","text":"64"},[806,808],"[popularFilmsUrl]"]